// Методы массивов
let colors = ['yellow','blue','white'];

//push()
colors.push('red'); // добавление элемента в конец массива

//pop()
colors.pop(); // удаляет с конца массива

//unshift()
colors.unshift('black'); // добавляет в начало массива

//shift()
colors.shift(); // удаляет с начала массива

// join()
// join из массива делает строку [1,2,3] => 1,2,3
// join('-') возвращает строку из массива с разделителем [1,2,3] => 1-2-3
// join('') - возвращает строку из массива без пробелов [1,2,3] => 123

// split() 
// split из строки делает массив из 1 элемента (вся строка) 'hello world' => ['hello world']
// split(' ') - разделитель, по которому делится строка на элементы 'hello world' => ['hello', 'world']
// split('') - каждый элемент строки - элемент массива

// concat() - объединяет массив/значения какие-то // можно сделать копию таким образом [].concat(массив который над скопировать)
let numbers = [10, 4, 5];

let joinedArray = numbers.concat(colors); 

// splice()  
colors.splice(1, 0, 11, 22, 33); // splice(с какого значения, сколько удалить, (что добавить на это место (хоть сколько элементов)))


// reverse() - переворачивает массив
// string.split("").reverse().join("") - переворачивает строку: строка в массив, массив реверс и обратно в строку


// sort()  по строкам все норм, по числам из массива 1,2,3,10,11,33,25,17 получится 1,10,11,17,2,25,3,33
let num = [10, 2, 15, 7, 1, 3, 28];
// норм функция сортировки чисел по возрастанию a-b, по убыванию b-a 
num.sort(function (a,b) {
    return a - b;
});

num.sort((a,b) => a - b); // тож самое, стрелочная функция

let users = [
    {
        id: 1,
        name: 'Vova',
        age: 23
    },
    {
        id: 2,
        name: 'Denis',
        age: 28
    },
    {
        id: 3,
        name: 'Lena',
        age: 18
    }
];

users.sort((a,b) => a.age-b.age); // сортировка по возрасту объектов
users.sort((a,b) => {
    if (a.name < b.name) return -1;
    if (a.name > b.name) return 1;
});                               // сортировка по имени объекта
